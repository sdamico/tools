#!/bin/bash

# Update Grok tools from GitHub

set -e

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

REPO_DIR="$HOME/repos/tools"

echo -e "${GREEN}Grok Tools Updater${NC}"
echo "=================="
echo

# Check if repo exists
if [ ! -d "$REPO_DIR" ]; then
    echo -e "${RED}Error: Repository not found at $REPO_DIR${NC}"
    echo "Please run the installation first"
    exit 1
fi

# Save current directory
CURRENT_DIR=$(pwd)

# Go to repo directory
cd "$REPO_DIR"

echo "Checking for updates..."

# Fetch latest changes
git fetch origin

# Check if we're behind
LOCAL=$(git rev-parse HEAD)
REMOTE=$(git rev-parse origin/main)

if [ "$LOCAL" = "$REMOTE" ]; then
    echo -e "${GREEN}✓${NC} Already up to date!"
    exit 0
fi

# Show what's new
echo
echo -e "${YELLOW}New updates available:${NC}"
git log --oneline HEAD..origin/main
echo

# Ask for confirmation
echo -n "Do you want to update? (y/n) "
read -r answer

if [ "$answer" != "y" ]; then
    echo "Update cancelled"
    exit 0
fi

# Check for local changes
if ! git diff-index --quiet HEAD --; then
    echo -e "${YELLOW}Warning: You have local changes${NC}"
    echo "Stashing changes..."
    git stash push -m "Auto-stash before grok-update"
fi

# Pull latest changes
echo "Updating..."
git pull origin main

# Check if stash needs to be popped
if git stash list | grep -q "Auto-stash before grok-update"; then
    echo "Restoring local changes..."
    git stash pop || echo -e "${YELLOW}Warning: Could not restore local changes automatically${NC}"
fi

# Return to original directory
cd "$CURRENT_DIR"

echo
echo -e "${GREEN}✓ Update complete!${NC}"

# Show what changed
echo
echo "Changes:"
cd "$REPO_DIR" && git log --oneline "$LOCAL".."$REMOTE"

# Remind about config
echo
echo -e "${YELLOW}Note:${NC} Your local config at ~/.grok/config is unchanged"